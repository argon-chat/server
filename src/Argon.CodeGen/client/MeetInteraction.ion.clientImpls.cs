//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MeetingInteraction_ClientImpl(IonClientContext context) : IMeetingInteraction
{
    
    private static readonly Lazy<MethodInfo> Join_Ref = new(() =>
        typeof(IMeetingInteraction).GetMethod(nameof(Join), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CreateMeetingLink_Ref = new(() =>
        typeof(IMeetingInteraction).GetMethod(nameof(CreateMeetingLink), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> SetDefaultPermissions_Ref = new(() =>
        typeof(IMeetingInteraction).GetMethod(nameof(SetDefaultPermissions), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginRecordAsync_Ref = new(() =>
        typeof(IMeetingInteraction).GetMethod(nameof(BeginRecordAsync), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> EndRecordAsync_Ref = new(() =>
        typeof(IMeetingInteraction).GetMethod(nameof(EndRecordAsync), BindingFlags.Public | BindingFlags.Instance)!);


    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task Join(string __invitecode, string __username, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IMeetingInteraction), Join_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 2;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __invitecode);
        IonFormatterStorage<string>.Write(writer, __username);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<string> CreateMeetingLink(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IMeetingInteraction), CreateMeetingLink_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<string>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task SetDefaultPermissions(string __roomid, i8 __permissions, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IMeetingInteraction), SetDefaultPermissions_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 2;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __roomid);
        IonFormatterStorage<i8>.Write(writer, __permissions);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<string> BeginRecordAsync(string __roomid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IMeetingInteraction), BeginRecordAsync_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __roomid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<string>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task EndRecordAsync(string __roomid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IMeetingInteraction), EndRecordAsync_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 1;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __roomid);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }

}

