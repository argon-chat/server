//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ServerInteraction_ClientImpl(IonClientContext context) : IServerInteraction
{
    
    private static readonly Lazy<MethodInfo> GetMembers_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(GetMembers), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetMember_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(GetMember), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetInviteCodes_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(GetInviteCodes), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CreateInviteCode_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(CreateInviteCode), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> PrefetchUser_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(PrefetchUser), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> PrefetchProfile_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(PrefetchProfile), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetChannels_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(GetChannels), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetServerArchetypes_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(GetServerArchetypes), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetDetailedServerArchetypes_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(GetDetailedServerArchetypes), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginUploadSpaceProfileHeader_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(BeginUploadSpaceProfileHeader), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CompleteUploadSpaceProfileHeader_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(CompleteUploadSpaceProfileHeader), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginUploadSpaceAvatar_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(BeginUploadSpaceAvatar), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CompleteUploadSpaceAvatar_Ref = new(() =>
        typeof(IServerInteraction).GetMethod(nameof(CompleteUploadSpaceAvatar), BindingFlags.Public | BindingFlags.Instance)!);


    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<RealtimeServerMember>> GetMembers(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), GetMembers_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<RealtimeServerMember>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<RealtimeServerMember> GetMember(guid __spaceid, guid __userid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), GetMember_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 2;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __userid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<RealtimeServerMember>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<InviteCodeEntity>> GetInviteCodes(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), GetInviteCodes_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<InviteCodeEntity>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<InviteCode> CreateInviteCode(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), CreateInviteCode_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<InviteCode>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUser> PrefetchUser(guid __spaceid, guid __userid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), PrefetchUser_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 2;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __userid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUser>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUserProfile> PrefetchProfile(guid __spaceid, guid __userid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), PrefetchProfile_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 2;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __userid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUserProfile>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<RealtimeChannel>> GetChannels(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), GetChannels_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<RealtimeChannel>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<Archetype>> GetServerArchetypes(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), GetServerArchetypes_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<Archetype>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<ArchetypeGroup>> GetDetailedServerArchetypes(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), GetDetailedServerArchetypes_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<ArchetypeGroup>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<guid> BeginUploadSpaceProfileHeader(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), BeginUploadSpaceProfileHeader_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<guid>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task CompleteUploadSpaceProfileHeader(guid __spaceid, guid __blobid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), CompleteUploadSpaceProfileHeader_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 2;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __blobid);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<guid> BeginUploadSpaceAvatar(guid __spaceid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), BeginUploadSpaceAvatar_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<guid>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task CompleteUploadSpaceAvatar(guid __spaceid, guid __blobid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IServerInteraction), CompleteUploadSpaceAvatar_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 2;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __blobid);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }

}

