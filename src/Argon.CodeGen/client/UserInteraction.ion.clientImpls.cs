//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_UserInteraction_ClientImpl(IonClientContext context) : IUserInteraction
{
    
    private static readonly Lazy<MethodInfo> GetMe_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetMe), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CreateSpace_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(CreateSpace), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetSpaces_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetSpaces), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> UpdateMe_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(UpdateMe), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> JoinToSpace_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(JoinToSpace), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BroadcastPresence_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(BroadcastPresence), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> RemoveBroadcastPresence_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(RemoveBroadcastPresence), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetMyFeatures_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetMyFeatures), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetMyProfile_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetMyProfile), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginUploadAvatar_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(BeginUploadAvatar), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CompleteUploadAvatar_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(CompleteUploadAvatar), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginUploadProfileHeader_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(BeginUploadProfileHeader), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CompleteUploadProfileHeader_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(CompleteUploadProfileHeader), BindingFlags.Public | BindingFlags.Instance)!);


    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUser> GetMe(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetMe_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUser>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ICreateSpaceResult> CreateSpace(CreateServerRequest __request, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), CreateSpace_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<CreateServerRequest>.Write(writer, __request);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ICreateSpaceResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<ArgonSpaceBase>> GetSpaces(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetSpaces_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<ArgonSpaceBase>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUser> UpdateMe(UserEditInput __request, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), UpdateMe_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<UserEditInput>.Write(writer, __request);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUser>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IJoinToSpaceResult> JoinToSpace(InviteCode __invitecode, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), JoinToSpace_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<InviteCode>.Write(writer, __invitecode);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IJoinToSpaceResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task BroadcastPresence(UserActivityPresence __presence, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), BroadcastPresence_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 1;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<UserActivityPresence>.Write(writer, __presence);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task RemoveBroadcastPresence(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), RemoveBroadcastPresence_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 0;

        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<FeatureFlag>> GetMyFeatures(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetMyFeatures_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsyncWithArray<FeatureFlag>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUserProfile> GetMyProfile(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetMyProfile_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUserProfile>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IUploadFileResult> BeginUploadAvatar(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), BeginUploadAvatar_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IUploadFileResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task CompleteUploadAvatar(guid __blobid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), CompleteUploadAvatar_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 1;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __blobid);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IUploadFileResult> BeginUploadProfileHeader(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), BeginUploadProfileHeader_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IUploadFileResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task CompleteUploadProfileHeader(guid __blobid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), CompleteUploadProfileHeader_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 1;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __blobid);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }

}

