//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IdentityInteraction_ClientImpl(IonClientContext context) : IIdentityInteraction
{
    
    private static readonly Lazy<MethodInfo> Authorize_Ref = new(() =>
        typeof(IIdentityInteraction).GetMethod(nameof(Authorize), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> Registration_Ref = new(() =>
        typeof(IIdentityInteraction).GetMethod(nameof(Registration), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginResetPassword_Ref = new(() =>
        typeof(IIdentityInteraction).GetMethod(nameof(BeginResetPassword), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> ResetPassword_Ref = new(() =>
        typeof(IIdentityInteraction).GetMethod(nameof(ResetPassword), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetAuthorizationScenario_Ref = new(() =>
        typeof(IIdentityInteraction).GetMethod(nameof(GetAuthorizationScenario), BindingFlags.Public | BindingFlags.Instance)!);


    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IAuthorizeResult> Authorize(UserCredentialsInput __data, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IIdentityInteraction), Authorize_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<UserCredentialsInput>.Write(writer, __data);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IAuthorizeResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IRegistrationResult> Registration(NewUserCredentialsInput __data, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IIdentityInteraction), Registration_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<NewUserCredentialsInput>.Write(writer, __data);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IRegistrationResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<bool> BeginResetPassword(string __email, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IIdentityInteraction), BeginResetPassword_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __email);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<bool>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IAuthorizeResult> ResetPassword(string __email, string __otpcode, string __newpassword, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IIdentityInteraction), ResetPassword_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 3;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __email);
        IonFormatterStorage<string>.Write(writer, __otpcode);
        IonFormatterStorage<string>.Write(writer, __newpassword);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IAuthorizeResult>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<string> GetAuthorizationScenario(CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IIdentityInteraction), GetAuthorizationScenario_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<string>(writer.Encode(), ct: ct);
    }

}

