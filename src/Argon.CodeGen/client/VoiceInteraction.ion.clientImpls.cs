//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_VoiceInteraction_ClientImpl(IonClientContext context) : IVoiceInteraction
{
    
    private static readonly Lazy<MethodInfo> DisconnectFromVoiceChannel_Ref = new(() =>
        typeof(IVoiceInteraction).GetMethod(nameof(DisconnectFromVoiceChannel), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> KickMemberFromChannel_Ref = new(() =>
        typeof(IVoiceInteraction).GetMethod(nameof(KickMemberFromChannel), BindingFlags.Public | BindingFlags.Instance)!);


    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<bool> DisconnectFromVoiceChannel(guid __spaceid, guid __channelid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IVoiceInteraction), DisconnectFromVoiceChannel_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 2;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __channelid);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<bool>(writer.Encode(), ct: ct);
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task KickMemberFromChannel(guid __spaceid, guid __channelid, guid __memberid, CancellationToken ct = default)
    {
        var req = new IonRequest(context, typeof(IVoiceInteraction), KickMemberFromChannel_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 3;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<guid>.Write(writer, __spaceid);
        IonFormatterStorage<guid>.Write(writer, __channelid);
        IonFormatterStorage<guid>.Write(writer, __memberid);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode(), ct: ct);
    }

}

