//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserEditInput(string? displayName, string? avatarId);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FeatureFlag(string key, bool enabled, string? variant, IonArray<FeatureFlagParameter> parameters);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FeatureFlagParameter(string key, string value);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record CreateServerRequest(string name, string description, string avatarFieldId);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserCredentialsInput(string? email, string? phone, string? username, string? password, string? otpCode, string? captchaToken);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record NewUserCredentialsInput(string email, string username, string password, string displayName, bool argreeTos, dateonly birthDate, bool argreeOptionalEmails, string? captchaToken);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum CreateSpaceError
{
    UNKNOWN = 0,
    LIMIT_REACHED = 1,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum AcceptInviteError
{
    NONE = 0,
    NOT_FOUND = 1,
    EXPIRED = 2,
    YOU_ARE_BANNED = 3,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum AuthorizationError
{
    NONE = 0,
    BAD_CREDENTIALS = 1,
    REQUIRED_OTP = 2,
    BAD_OTP = 3,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum RegistrationError
{
    USERNAME_ALREADY_TAKEN = 0,
    USERNAME_RESERVED = 1,
    EMAIL_ALREADY_REGISTERED = 2,
    REGION_BANNED = 3,
    EMAIL_BANNED = 4,
    SSO_EMAILS_NOT_ALLOWED = 5,
    INTERNAL_ERROR = 6,
    VALIDATION_FAILED = 7,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum LockdownReason
{
    NONE = 0,
    SPAM_SCAM_ACCOUNT = 1,
    INCITING_MOMENT = 2,
    NON_BINARY_PERSON = 3,
    TOS_VIOLATION = 4,
    LGBT_AGITATION = 5,
    DRUG_VIOLATION = 6,
    TERRORISM_AGITATION = 7,
    CHILD_ABUSE = 8,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IUserInteraction : IIonService
{
    Task<ArgonUser> GetMe(CancellationToken ct = default);
    Task<ICreateSpaceResult> CreateSpace(CreateServerRequest request, CancellationToken ct = default);
    Task<IonArray<ArgonSpaceBase>> GetSpaces(CancellationToken ct = default);
    Task<ArgonUser> UpdateMe(UserEditInput request, CancellationToken ct = default);
    Task<IJoinToSpaceResult> JoinToSpace(InviteCode inviteCode, CancellationToken ct = default);
    Task BroadcastPresence(UserActivityPresence presence, CancellationToken ct = default);
    Task RemoveBroadcastPresence(CancellationToken ct = default);
    Task<IonArray<FeatureFlag>> GetMyFeatures(CancellationToken ct = default);
    Task<ArgonUserProfile> GetMyProfile(CancellationToken ct = default);
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface ICreateSpaceResult : IIonUnion<ICreateSpaceResult>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsSuccessCreateSpace => this is SuccessCreateSpace;

    internal bool IsFailedCreateSpace => this is FailedCreateSpace;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SuccessCreateSpace(ArgonSpaceBase space) : ICreateSpaceResult
{
    public string UnionKey => nameof(SuccessCreateSpace);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FailedCreateSpace(CreateSpaceError error) : ICreateSpaceResult
{
    public string UnionKey => nameof(FailedCreateSpace);
    public uint UnionIndex => 1;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ICreateSpaceResult_Formatter : IonFormatter<ICreateSpaceResult>
{
    public ICreateSpaceResult Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        ICreateSpaceResult result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<SuccessCreateSpace>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<FailedCreateSpace>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, ICreateSpaceResult value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is SuccessCreateSpace n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<SuccessCreateSpace>.Write(writer, n_0);
        }

        else if (value is FailedCreateSpace n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<FailedCreateSpace>.Write(writer, n_1);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_SuccessCreateSpace_Formatter : IonFormatter<SuccessCreateSpace>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public SuccessCreateSpace Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __space = IonFormatterStorage<ArgonSpaceBase>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__space);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, SuccessCreateSpace value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<ArgonSpaceBase>.Write(writer, value.space);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_FailedCreateSpace_Formatter : IonFormatter<FailedCreateSpace>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public FailedCreateSpace Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __error = IonFormatterStorage<CreateSpaceError>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__error);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, FailedCreateSpace value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<CreateSpaceError>.Write(writer, value.error);
        writer.WriteEndArray();
    }
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IAuthorizeResult : IIonUnion<IAuthorizeResult>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsSuccessAuthorize => this is SuccessAuthorize;

    internal bool IsFailedAuthorize => this is FailedAuthorize;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SuccessAuthorize(string token, string? refreshToken) : IAuthorizeResult
{
    public string UnionKey => nameof(SuccessAuthorize);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FailedAuthorize(AuthorizationError error) : IAuthorizeResult
{
    public string UnionKey => nameof(FailedAuthorize);
    public uint UnionIndex => 1;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IAuthorizeResult_Formatter : IonFormatter<IAuthorizeResult>
{
    public IAuthorizeResult Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IAuthorizeResult result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<SuccessAuthorize>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<FailedAuthorize>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IAuthorizeResult value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is SuccessAuthorize n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<SuccessAuthorize>.Write(writer, n_0);
        }

        else if (value is FailedAuthorize n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<FailedAuthorize>.Write(writer, n_1);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_SuccessAuthorize_Formatter : IonFormatter<SuccessAuthorize>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public SuccessAuthorize Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __token = IonFormatterStorage<string>.Read(reader);
        var __refreshtoken = reader.ReadNullable<string>();
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__token, __refreshtoken);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, SuccessAuthorize value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<string>.Write(writer, value.token);
        IonFormatterStorage<string>.WriteNullable(writer, value.refreshToken);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_FailedAuthorize_Formatter : IonFormatter<FailedAuthorize>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public FailedAuthorize Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __error = IonFormatterStorage<AuthorizationError>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__error);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, FailedAuthorize value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<AuthorizationError>.Write(writer, value.error);
        writer.WriteEndArray();
    }
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IRegistrationResult : IIonUnion<IRegistrationResult>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsSuccessRegistration => this is SuccessRegistration;

    internal bool IsFailedRegistration => this is FailedRegistration;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SuccessRegistration(string token, string? refreshToken) : IRegistrationResult
{
    public string UnionKey => nameof(SuccessRegistration);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FailedRegistration(RegistrationError error, string? field, string? message) : IRegistrationResult
{
    public string UnionKey => nameof(FailedRegistration);
    public uint UnionIndex => 1;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IRegistrationResult_Formatter : IonFormatter<IRegistrationResult>
{
    public IRegistrationResult Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IRegistrationResult result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<SuccessRegistration>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<FailedRegistration>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IRegistrationResult value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is SuccessRegistration n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<SuccessRegistration>.Write(writer, n_0);
        }

        else if (value is FailedRegistration n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<FailedRegistration>.Write(writer, n_1);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_SuccessRegistration_Formatter : IonFormatter<SuccessRegistration>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public SuccessRegistration Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __token = IonFormatterStorage<string>.Read(reader);
        var __refreshtoken = reader.ReadNullable<string>();
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__token, __refreshtoken);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, SuccessRegistration value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<string>.Write(writer, value.token);
        IonFormatterStorage<string>.WriteNullable(writer, value.refreshToken);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_FailedRegistration_Formatter : IonFormatter<FailedRegistration>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public FailedRegistration Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __error = IonFormatterStorage<RegistrationError>.Read(reader);
        var __field = reader.ReadNullable<string>();
        var __message = reader.ReadNullable<string>();
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__error, __field, __message);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, FailedRegistration value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<RegistrationError>.Write(writer, value.error);
        IonFormatterStorage<string>.WriteNullable(writer, value.field);
        IonFormatterStorage<string>.WriteNullable(writer, value.message);
        writer.WriteEndArray();
    }
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IJoinToSpaceResult : IIonUnion<IJoinToSpaceResult>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsSuccessJoin => this is SuccessJoin;

    internal bool IsFailedJoin => this is FailedJoin;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SuccessJoin(ArgonSpace space) : IJoinToSpaceResult
{
    public string UnionKey => nameof(SuccessJoin);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FailedJoin(AcceptInviteError error) : IJoinToSpaceResult
{
    public string UnionKey => nameof(FailedJoin);
    public uint UnionIndex => 1;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IJoinToSpaceResult_Formatter : IonFormatter<IJoinToSpaceResult>
{
    public IJoinToSpaceResult Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IJoinToSpaceResult result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<SuccessJoin>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<FailedJoin>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IJoinToSpaceResult value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is SuccessJoin n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<SuccessJoin>.Write(writer, n_0);
        }

        else if (value is FailedJoin n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<FailedJoin>.Write(writer, n_1);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_SuccessJoin_Formatter : IonFormatter<SuccessJoin>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public SuccessJoin Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __space = IonFormatterStorage<ArgonSpace>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__space);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, SuccessJoin value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<ArgonSpace>.Write(writer, value.space);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_FailedJoin_Formatter : IonFormatter<FailedJoin>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public FailedJoin Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __error = IonFormatterStorage<AcceptInviteError>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__error);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, FailedJoin value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<AcceptInviteError>.Write(writer, value.error);
        writer.WriteEndArray();
    }
}


