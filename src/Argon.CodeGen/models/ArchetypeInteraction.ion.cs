//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ChannelEntitlementOverwrite(guid channelId, guid? archetypeId, guid? serverMemberId, ArgonEntitlement allow, ArgonEntitlement deny, guid creatorId, guid id);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record Archetype(guid id, guid spaceId, string name, string description, bool isMentionable, i4 colour, bool isHidden, bool isLocked, bool isGroup, bool isDefault, string? iconFileId, ArgonEntitlement entitlement);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IArchetypeInteraction : IIonService
{
    Task<IonArray<Archetype>> GetServerArchetypes(guid spaceId, CancellationToken ct = default);
    Task<Archetype> CreateArchetype(guid spaceId, string name, CancellationToken ct = default);
    Task<Archetype> UpdateArchetype(guid spaceId, Archetype data, CancellationToken ct = default);
    Task<bool> SetArchetypeToMember(guid spaceId, guid memberId, guid archetypeId, bool isGrant, CancellationToken ct = default);
    Task<IonArray<ArchetypeGroup>> GetDetailedServerArchetypes(guid spaceId, CancellationToken ct = default);
    Task<ChannelEntitlementOverwrite?> UpsertArchetypeEntitlementForChannel(guid spaceId, guid channelId, guid archetypeId, ArgonEntitlement deny, ArgonEntitlement allow, CancellationToken ct = default);
}


