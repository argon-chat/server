//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArgonSpaceBase(guid spaceId, string name, string description, string? avatarFieldId, string? topBannerFileId);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArgonSpace(guid spaceId, string name, string description, string? avatarFieldId, string? topBannerFileId, IonArray<ArgonChannel> channels, IonArray<SpaceMember> members, IonArray<Archetype> archetypes);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArchetypeGroup(Archetype archetype, IonArray<guid> members);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SpaceMemberArchetype(guid serverMemberId, guid archetypeId);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SpaceMember(guid userId, guid spaceId, datetime joinedAt, guid memberId, ArgonUser user, IonArray<SpaceMemberArchetype> archetypes);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record RealtimeServerMember(SpaceMember member, UserStatus status, UserActivityPresence? presence);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record InviteCodeEntity(InviteCode code, guid spaceId, guid issuerId, datetime expireTime, u8 used);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record InviteCode(string inviteCode);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArgonUser(guid userId, string username, string displayName, string? avatarFileId);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArgonUserProfile(guid userId, string? customStatus, string? customStatusIconId, string? bannerFileID, dateonly? dateOfBirth, string? bio, bool isPremium, IonArray<string> badges, IonArray<SpaceMemberArchetype> archetypes);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum UserStatus
{
    Offline = 0,
    Online = 1,
    Away = 2,
    InGame = 3,
    Listen = 4,
    TouchGrass = 5,
    DoNotDisturb = 6,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
[Flags]
public enum ArgonEntitlement : u8
{
    None = 0,
    ViewChannel = 1,
    ReadHistory = 2,
    JoinToVoice = 4,
    SendMessages = 32,
    SendVoice = 64,
    AttachFiles = 128,
    AddReactions = 256,
    AnyMentions = 512,
    MentionEveryone = 1024,
    ExternalEmoji = 2048,
    ExternalStickers = 4096,
    UseCommands = 8192,
    PostEmbeddedLinks = 16384,
    Connect = 1048576,
    Speak = 2097152,
    Video = 4194304,
    Stream = 8388608,
    UseASIO = 1073741824,
    AdditionalStreams = 2147483648,
    DisconnectMember = 1099511627776,
    MoveMember = 2199023255552,
    BanMember = 4398046511104,
    MuteMember = 8796093022208,
    KickMember = 17592186044416,
    ManageChannels = 1125899906842624,
    ManageArchetype = 2251799813685248,
    ManageBots = 4503599627370496,
    ManageEvents = 9007199254740992,
    ManageBehaviour = 18014398509481984,
    ManageServer = 36028797018963968,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IServerInteraction : IIonService
{
    Task<IonArray<RealtimeServerMember>> GetMembers(guid spaceId, CancellationToken ct = default);
    Task<RealtimeServerMember> GetMember(guid spaceId, guid userId, CancellationToken ct = default);
    Task<IonArray<InviteCodeEntity>> GetInviteCodes(guid spaceId, CancellationToken ct = default);
    Task<InviteCode> CreateInviteCode(guid spaceId, CancellationToken ct = default);
    Task<ArgonUser> PrefetchUser(guid spaceId, guid userId, CancellationToken ct = default);
    Task<ArgonUserProfile> PrefetchProfile(guid spaceId, guid userId, CancellationToken ct = default);
    Task<IonArray<RealtimeChannel>> GetChannels(guid spaceId, CancellationToken ct = default);
    Task<IonArray<Archetype>> GetServerArchetypes(guid spaceId, CancellationToken ct = default);
    Task<IonArray<ArchetypeGroup>> GetDetailedServerArchetypes(guid spaceId, CancellationToken ct = default);
    Task<guid> BeginUploadSpaceProfileHeader(guid spaceId, CancellationToken ct = default);
    Task CompleteUploadSpaceProfileHeader(guid spaceId, guid blobId, CancellationToken ct = default);
    Task<guid> BeginUploadSpaceAvatar(guid spaceId, CancellationToken ct = default);
    Task CompleteUploadSpaceAvatar(guid spaceId, guid blobId, CancellationToken ct = default);
}


