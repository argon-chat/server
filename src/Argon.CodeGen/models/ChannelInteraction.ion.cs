//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record CreateChannelRequest(guid spaceId, string name, ChannelType kind, string desc);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record RealtimeChannel(ArgonChannel channel, IonArray<RealtimeChannelUser> users);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArgonChannel(ChannelType type, guid spaceId, guid channelId, string name, string? description, guid categoryId);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArgonMessage(u8 messageId, u8? replyId, guid channelId, guid spaceId, string text, IonArray<IMessageEntity> entities, datetime timeSent, guid sender);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record RealtimeChannelUser(guid userId, ChannelMemberState state);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserActivityPresence(ActivityPresenceKind kind, u8 startTimestampSeconds, string titleName);


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum ChannelType
{
    Text = 0,
    Voice = 1,
    Announcement = 2,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum JoinToChannelError
{
    NONE = 0,
    CHANNEL_IS_NOT_VOICE = 1,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum EntityType
{
    Hashtag = 0,
    Mention = 1,
    Email = 2,
    Url = 3,
    Monospace = 4,
    Quote = 5,
    Spoiler = 6,
    Strikethrough = 7,
    Bold = 8,
    Italic = 9,
    Underline = 10,
    Fraction = 11,
    Ordinal = 12,
    Capitalized = 13,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public enum ActivityPresenceKind
{
    GAME = 0,
    SOFTWARE = 1,
    STREAMING = 2,
    LISTEN = 3,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
[Flags]
public enum ChannelMemberState : u4
{
    NONE = 0,
    MUTED = 2,
    MUTED_BY_SERVER = 4,
    MUTED_HEADPHONES = 8,
    MUTED_HEADPHONES_BY_SERVER = 16,
    STREAMING = 32,
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IChannelInteraction : IIonService
{
    Task CreateChannel(guid spaceId, guid channelId, CreateChannelRequest request, CancellationToken ct = default);
    Task DeleteChannel(guid spaceId, guid channelId, CancellationToken ct = default);
    Task<IonArray<RealtimeChannel>> GetChannels(guid spaceId, guid channelId, CancellationToken ct = default);
    Task<IonArray<ArgonMessage>> QueryMessages(guid spaceId, guid channelId, u8? from, i4 limit, CancellationToken ct = default);
    Task<u8> SendMessage(guid spaceId, guid channelId, string text, IonArray<IMessageEntity> entities, u8? replyTo, CancellationToken ct = default);
    [Obsolete]
    Task<IonArray<ArgonMessage>> GetMessages(guid spaceId, guid channelId, i4 count, u8 offset, CancellationToken ct = default);
    Task DisconnectFromVoiceChannel(guid spaceId, guid channelId, CancellationToken ct = default);
    Task<IInterlinkResult> Interlink(guid spaceId, guid channelId, CancellationToken ct = default);
    Task<bool> KickMemberFromChannel(guid spaceId, guid channelId, guid memberId, CancellationToken ct = default);
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IEventBus : IIonService
{
    IAsyncEnumerable<IArgonEvent> ForServer(guid spaceId, CancellationToken ct = default);
    Task Dispatch(IArgonClientEvent ev, CancellationToken ct = default);
    IAsyncEnumerable<IArgonEvent> Pipe(IAsyncEnumerable<IArgonClientEvent>?  ev, CancellationToken ct = default);
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IMessageEntity : IIonUnion<IMessageEntity>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsMessageEntityMention => this is MessageEntityMention;

    internal bool IsMessageEntityEmail => this is MessageEntityEmail;

    internal bool IsMessageEntityHashTag => this is MessageEntityHashTag;

    internal bool IsMessageEntityQuote => this is MessageEntityQuote;

    internal bool IsMessageEntityUnderline => this is MessageEntityUnderline;

    internal bool IsMessageEntityUrl => this is MessageEntityUrl;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageEntityMention(EntityType type, i4 offset, i4 length, i4 version, guid userId) : IMessageEntity
{
    public string UnionKey => nameof(MessageEntityMention);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageEntityEmail(EntityType type, i4 offset, i4 length, i4 version, string email) : IMessageEntity
{
    public string UnionKey => nameof(MessageEntityEmail);
    public uint UnionIndex => 1;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageEntityHashTag(EntityType type, i4 offset, i4 length, i4 version, string hashtag) : IMessageEntity
{
    public string UnionKey => nameof(MessageEntityHashTag);
    public uint UnionIndex => 2;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageEntityQuote(EntityType type, i4 offset, i4 length, i4 version, guid quotedUserId) : IMessageEntity
{
    public string UnionKey => nameof(MessageEntityQuote);
    public uint UnionIndex => 3;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageEntityUnderline(EntityType type, i4 offset, i4 length, i4 version, i4 colour) : IMessageEntity
{
    public string UnionKey => nameof(MessageEntityUnderline);
    public uint UnionIndex => 4;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageEntityUrl(EntityType type, i4 offset, i4 length, i4 version, string domain, string path) : IMessageEntity
{
    public string UnionKey => nameof(MessageEntityUrl);
    public uint UnionIndex => 5;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IMessageEntity_Formatter : IonFormatter<IMessageEntity>
{
    public IMessageEntity Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IMessageEntity result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<MessageEntityMention>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<MessageEntityEmail>.Read(reader);

        else if (unionIndex == 2)
            result = IonFormatterStorage<MessageEntityHashTag>.Read(reader);

        else if (unionIndex == 3)
            result = IonFormatterStorage<MessageEntityQuote>.Read(reader);

        else if (unionIndex == 4)
            result = IonFormatterStorage<MessageEntityUnderline>.Read(reader);

        else if (unionIndex == 5)
            result = IonFormatterStorage<MessageEntityUrl>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IMessageEntity value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is MessageEntityMention n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageEntityMention>.Write(writer, n_0);
        }

        else if (value is MessageEntityEmail n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageEntityEmail>.Write(writer, n_1);
        }

        else if (value is MessageEntityHashTag n_2)
        {
            if (n_2.UnionIndex != 2)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageEntityHashTag>.Write(writer, n_2);
        }

        else if (value is MessageEntityQuote n_3)
        {
            if (n_3.UnionIndex != 3)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageEntityQuote>.Write(writer, n_3);
        }

        else if (value is MessageEntityUnderline n_4)
        {
            if (n_4.UnionIndex != 4)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageEntityUnderline>.Write(writer, n_4);
        }

        else if (value is MessageEntityUrl n_5)
        {
            if (n_5.UnionIndex != 5)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageEntityUrl>.Write(writer, n_5);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageEntityMention_Formatter : IonFormatter<MessageEntityMention>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageEntityMention Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __type = IonFormatterStorage<EntityType>.Read(reader);
        var __offset = IonFormatterStorage<i4>.Read(reader);
        var __length = IonFormatterStorage<i4>.Read(reader);
        var __version = IonFormatterStorage<i4>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 5);
        return new(__type, __offset, __length, __version, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageEntityMention value)
    {
        writer.WriteStartArray(5);
        IonFormatterStorage<EntityType>.Write(writer, value.type);
        IonFormatterStorage<i4>.Write(writer, value.offset);
        IonFormatterStorage<i4>.Write(writer, value.length);
        IonFormatterStorage<i4>.Write(writer, value.version);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageEntityEmail_Formatter : IonFormatter<MessageEntityEmail>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageEntityEmail Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __type = IonFormatterStorage<EntityType>.Read(reader);
        var __offset = IonFormatterStorage<i4>.Read(reader);
        var __length = IonFormatterStorage<i4>.Read(reader);
        var __version = IonFormatterStorage<i4>.Read(reader);
        var __email = IonFormatterStorage<string>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 5);
        return new(__type, __offset, __length, __version, __email);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageEntityEmail value)
    {
        writer.WriteStartArray(5);
        IonFormatterStorage<EntityType>.Write(writer, value.type);
        IonFormatterStorage<i4>.Write(writer, value.offset);
        IonFormatterStorage<i4>.Write(writer, value.length);
        IonFormatterStorage<i4>.Write(writer, value.version);
        IonFormatterStorage<string>.Write(writer, value.email);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageEntityHashTag_Formatter : IonFormatter<MessageEntityHashTag>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageEntityHashTag Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __type = IonFormatterStorage<EntityType>.Read(reader);
        var __offset = IonFormatterStorage<i4>.Read(reader);
        var __length = IonFormatterStorage<i4>.Read(reader);
        var __version = IonFormatterStorage<i4>.Read(reader);
        var __hashtag = IonFormatterStorage<string>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 5);
        return new(__type, __offset, __length, __version, __hashtag);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageEntityHashTag value)
    {
        writer.WriteStartArray(5);
        IonFormatterStorage<EntityType>.Write(writer, value.type);
        IonFormatterStorage<i4>.Write(writer, value.offset);
        IonFormatterStorage<i4>.Write(writer, value.length);
        IonFormatterStorage<i4>.Write(writer, value.version);
        IonFormatterStorage<string>.Write(writer, value.hashtag);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageEntityQuote_Formatter : IonFormatter<MessageEntityQuote>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageEntityQuote Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __type = IonFormatterStorage<EntityType>.Read(reader);
        var __offset = IonFormatterStorage<i4>.Read(reader);
        var __length = IonFormatterStorage<i4>.Read(reader);
        var __version = IonFormatterStorage<i4>.Read(reader);
        var __quoteduserid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 5);
        return new(__type, __offset, __length, __version, __quoteduserid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageEntityQuote value)
    {
        writer.WriteStartArray(5);
        IonFormatterStorage<EntityType>.Write(writer, value.type);
        IonFormatterStorage<i4>.Write(writer, value.offset);
        IonFormatterStorage<i4>.Write(writer, value.length);
        IonFormatterStorage<i4>.Write(writer, value.version);
        IonFormatterStorage<guid>.Write(writer, value.quotedUserId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageEntityUnderline_Formatter : IonFormatter<MessageEntityUnderline>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageEntityUnderline Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __type = IonFormatterStorage<EntityType>.Read(reader);
        var __offset = IonFormatterStorage<i4>.Read(reader);
        var __length = IonFormatterStorage<i4>.Read(reader);
        var __version = IonFormatterStorage<i4>.Read(reader);
        var __colour = IonFormatterStorage<i4>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 5);
        return new(__type, __offset, __length, __version, __colour);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageEntityUnderline value)
    {
        writer.WriteStartArray(5);
        IonFormatterStorage<EntityType>.Write(writer, value.type);
        IonFormatterStorage<i4>.Write(writer, value.offset);
        IonFormatterStorage<i4>.Write(writer, value.length);
        IonFormatterStorage<i4>.Write(writer, value.version);
        IonFormatterStorage<i4>.Write(writer, value.colour);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageEntityUrl_Formatter : IonFormatter<MessageEntityUrl>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageEntityUrl Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __type = IonFormatterStorage<EntityType>.Read(reader);
        var __offset = IonFormatterStorage<i4>.Read(reader);
        var __length = IonFormatterStorage<i4>.Read(reader);
        var __version = IonFormatterStorage<i4>.Read(reader);
        var __domain = IonFormatterStorage<string>.Read(reader);
        var __path = IonFormatterStorage<string>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 6);
        return new(__type, __offset, __length, __version, __domain, __path);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageEntityUrl value)
    {
        writer.WriteStartArray(6);
        IonFormatterStorage<EntityType>.Write(writer, value.type);
        IonFormatterStorage<i4>.Write(writer, value.offset);
        IonFormatterStorage<i4>.Write(writer, value.length);
        IonFormatterStorage<i4>.Write(writer, value.version);
        IonFormatterStorage<string>.Write(writer, value.domain);
        IonFormatterStorage<string>.Write(writer, value.path);
        writer.WriteEndArray();
    }
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IInterlinkResult : IIonUnion<IInterlinkResult>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsSuccessJoinVoice => this is SuccessJoinVoice;

    internal bool IsFailedJoinVoice => this is FailedJoinVoice;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SuccessJoinVoice(RtcEndpoint rtc, string token) : IInterlinkResult
{
    public string UnionKey => nameof(SuccessJoinVoice);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record FailedJoinVoice(JoinToChannelError error) : IInterlinkResult
{
    public string UnionKey => nameof(FailedJoinVoice);
    public uint UnionIndex => 1;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IInterlinkResult_Formatter : IonFormatter<IInterlinkResult>
{
    public IInterlinkResult Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IInterlinkResult result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<SuccessJoinVoice>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<FailedJoinVoice>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IInterlinkResult value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is SuccessJoinVoice n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<SuccessJoinVoice>.Write(writer, n_0);
        }

        else if (value is FailedJoinVoice n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<FailedJoinVoice>.Write(writer, n_1);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_SuccessJoinVoice_Formatter : IonFormatter<SuccessJoinVoice>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public SuccessJoinVoice Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __rtc = IonFormatterStorage<RtcEndpoint>.Read(reader);
        var __token = IonFormatterStorage<string>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__rtc, __token);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, SuccessJoinVoice value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<RtcEndpoint>.Write(writer, value.rtc);
        IonFormatterStorage<string>.Write(writer, value.token);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_FailedJoinVoice_Formatter : IonFormatter<FailedJoinVoice>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public FailedJoinVoice Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __error = IonFormatterStorage<JoinToChannelError>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__error);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, FailedJoinVoice value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<JoinToChannelError>.Write(writer, value.error);
        writer.WriteEndArray();
    }
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IArgonEvent : IIonUnion<IArgonEvent>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsArchetypeChanged => this is ArchetypeChanged;

    internal bool IsArchetypeCreated => this is ArchetypeCreated;

    internal bool IsChannelCreated => this is ChannelCreated;

    internal bool IsChannelModified => this is ChannelModified;

    internal bool IsChannelRemoved => this is ChannelRemoved;

    internal bool IsUserTypingEvent => this is UserTypingEvent;

    internal bool IsUserStopTypingEvent => this is UserStopTypingEvent;

    internal bool IsJoinedToChannelUser => this is JoinedToChannelUser;

    internal bool IsJoinToServerUser => this is JoinToServerUser;

    internal bool IsLeavedFromChannelUser => this is LeavedFromChannelUser;

    internal bool IsUserUpdated => this is UserUpdated;

    internal bool IsOnUserPresenceActivityChanged => this is OnUserPresenceActivityChanged;

    internal bool IsOnUserPresenceActivityRemoved => this is OnUserPresenceActivityRemoved;

    internal bool IsUserChangedStatus => this is UserChangedStatus;

    internal bool IsMessageSent => this is MessageSent;

    internal bool IsServerModified => this is ServerModified;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArchetypeChanged(guid spaceId, Archetype data) : IArgonEvent
{
    public string UnionKey => nameof(ArchetypeChanged);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ArchetypeCreated(guid spaceId, Archetype data) : IArgonEvent
{
    public string UnionKey => nameof(ArchetypeCreated);
    public uint UnionIndex => 1;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ChannelCreated(guid spaceId, ArgonChannel data) : IArgonEvent
{
    public string UnionKey => nameof(ChannelCreated);
    public uint UnionIndex => 2;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ChannelModified(guid spaceId, guid channelId, IonArray<string> bag) : IArgonEvent
{
    public string UnionKey => nameof(ChannelModified);
    public uint UnionIndex => 3;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ChannelRemoved(guid spaceId, guid channelId) : IArgonEvent
{
    public string UnionKey => nameof(ChannelRemoved);
    public uint UnionIndex => 4;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserTypingEvent(guid spaceId, guid channelId, guid userId) : IArgonEvent
{
    public string UnionKey => nameof(UserTypingEvent);
    public uint UnionIndex => 5;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserStopTypingEvent(guid spaceId, guid channelId, guid userId) : IArgonEvent
{
    public string UnionKey => nameof(UserStopTypingEvent);
    public uint UnionIndex => 6;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record JoinedToChannelUser(guid spaceId, guid channelId, guid userId) : IArgonEvent
{
    public string UnionKey => nameof(JoinedToChannelUser);
    public uint UnionIndex => 7;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record JoinToServerUser(guid spaceId, guid userId) : IArgonEvent
{
    public string UnionKey => nameof(JoinToServerUser);
    public uint UnionIndex => 8;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record LeavedFromChannelUser(guid spaceId, guid channelId, guid userId) : IArgonEvent
{
    public string UnionKey => nameof(LeavedFromChannelUser);
    public uint UnionIndex => 9;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserUpdated(guid spaceId, ArgonUser dto) : IArgonEvent
{
    public string UnionKey => nameof(UserUpdated);
    public uint UnionIndex => 10;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record OnUserPresenceActivityChanged(guid spaceId, guid userId, UserActivityPresence presence) : IArgonEvent
{
    public string UnionKey => nameof(OnUserPresenceActivityChanged);
    public uint UnionIndex => 11;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record OnUserPresenceActivityRemoved(guid spaceId, guid userId) : IArgonEvent
{
    public string UnionKey => nameof(OnUserPresenceActivityRemoved);
    public uint UnionIndex => 12;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record UserChangedStatus(guid spaceId, guid userId, UserStatus status, IonArray<string> bag) : IArgonEvent
{
    public string UnionKey => nameof(UserChangedStatus);
    public uint UnionIndex => 13;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record MessageSent(guid spaceId, ArgonMessage message) : IArgonEvent
{
    public string UnionKey => nameof(MessageSent);
    public uint UnionIndex => 14;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record ServerModified(guid spaceId, IonArray<string> bag) : IArgonEvent
{
    public string UnionKey => nameof(ServerModified);
    public uint UnionIndex => 15;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IArgonEvent_Formatter : IonFormatter<IArgonEvent>
{
    public IArgonEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IArgonEvent result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<ArchetypeChanged>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<ArchetypeCreated>.Read(reader);

        else if (unionIndex == 2)
            result = IonFormatterStorage<ChannelCreated>.Read(reader);

        else if (unionIndex == 3)
            result = IonFormatterStorage<ChannelModified>.Read(reader);

        else if (unionIndex == 4)
            result = IonFormatterStorage<ChannelRemoved>.Read(reader);

        else if (unionIndex == 5)
            result = IonFormatterStorage<UserTypingEvent>.Read(reader);

        else if (unionIndex == 6)
            result = IonFormatterStorage<UserStopTypingEvent>.Read(reader);

        else if (unionIndex == 7)
            result = IonFormatterStorage<JoinedToChannelUser>.Read(reader);

        else if (unionIndex == 8)
            result = IonFormatterStorage<JoinToServerUser>.Read(reader);

        else if (unionIndex == 9)
            result = IonFormatterStorage<LeavedFromChannelUser>.Read(reader);

        else if (unionIndex == 10)
            result = IonFormatterStorage<UserUpdated>.Read(reader);

        else if (unionIndex == 11)
            result = IonFormatterStorage<OnUserPresenceActivityChanged>.Read(reader);

        else if (unionIndex == 12)
            result = IonFormatterStorage<OnUserPresenceActivityRemoved>.Read(reader);

        else if (unionIndex == 13)
            result = IonFormatterStorage<UserChangedStatus>.Read(reader);

        else if (unionIndex == 14)
            result = IonFormatterStorage<MessageSent>.Read(reader);

        else if (unionIndex == 15)
            result = IonFormatterStorage<ServerModified>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IArgonEvent value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is ArchetypeChanged n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<ArchetypeChanged>.Write(writer, n_0);
        }

        else if (value is ArchetypeCreated n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<ArchetypeCreated>.Write(writer, n_1);
        }

        else if (value is ChannelCreated n_2)
        {
            if (n_2.UnionIndex != 2)
                throw new InvalidOperationException();
            IonFormatterStorage<ChannelCreated>.Write(writer, n_2);
        }

        else if (value is ChannelModified n_3)
        {
            if (n_3.UnionIndex != 3)
                throw new InvalidOperationException();
            IonFormatterStorage<ChannelModified>.Write(writer, n_3);
        }

        else if (value is ChannelRemoved n_4)
        {
            if (n_4.UnionIndex != 4)
                throw new InvalidOperationException();
            IonFormatterStorage<ChannelRemoved>.Write(writer, n_4);
        }

        else if (value is UserTypingEvent n_5)
        {
            if (n_5.UnionIndex != 5)
                throw new InvalidOperationException();
            IonFormatterStorage<UserTypingEvent>.Write(writer, n_5);
        }

        else if (value is UserStopTypingEvent n_6)
        {
            if (n_6.UnionIndex != 6)
                throw new InvalidOperationException();
            IonFormatterStorage<UserStopTypingEvent>.Write(writer, n_6);
        }

        else if (value is JoinedToChannelUser n_7)
        {
            if (n_7.UnionIndex != 7)
                throw new InvalidOperationException();
            IonFormatterStorage<JoinedToChannelUser>.Write(writer, n_7);
        }

        else if (value is JoinToServerUser n_8)
        {
            if (n_8.UnionIndex != 8)
                throw new InvalidOperationException();
            IonFormatterStorage<JoinToServerUser>.Write(writer, n_8);
        }

        else if (value is LeavedFromChannelUser n_9)
        {
            if (n_9.UnionIndex != 9)
                throw new InvalidOperationException();
            IonFormatterStorage<LeavedFromChannelUser>.Write(writer, n_9);
        }

        else if (value is UserUpdated n_10)
        {
            if (n_10.UnionIndex != 10)
                throw new InvalidOperationException();
            IonFormatterStorage<UserUpdated>.Write(writer, n_10);
        }

        else if (value is OnUserPresenceActivityChanged n_11)
        {
            if (n_11.UnionIndex != 11)
                throw new InvalidOperationException();
            IonFormatterStorage<OnUserPresenceActivityChanged>.Write(writer, n_11);
        }

        else if (value is OnUserPresenceActivityRemoved n_12)
        {
            if (n_12.UnionIndex != 12)
                throw new InvalidOperationException();
            IonFormatterStorage<OnUserPresenceActivityRemoved>.Write(writer, n_12);
        }

        else if (value is UserChangedStatus n_13)
        {
            if (n_13.UnionIndex != 13)
                throw new InvalidOperationException();
            IonFormatterStorage<UserChangedStatus>.Write(writer, n_13);
        }

        else if (value is MessageSent n_14)
        {
            if (n_14.UnionIndex != 14)
                throw new InvalidOperationException();
            IonFormatterStorage<MessageSent>.Write(writer, n_14);
        }

        else if (value is ServerModified n_15)
        {
            if (n_15.UnionIndex != 15)
                throw new InvalidOperationException();
            IonFormatterStorage<ServerModified>.Write(writer, n_15);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ArchetypeChanged_Formatter : IonFormatter<ArchetypeChanged>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ArchetypeChanged Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __data = IonFormatterStorage<Archetype>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __data);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ArchetypeChanged value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<Archetype>.Write(writer, value.data);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ArchetypeCreated_Formatter : IonFormatter<ArchetypeCreated>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ArchetypeCreated Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __data = IonFormatterStorage<Archetype>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __data);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ArchetypeCreated value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<Archetype>.Write(writer, value.data);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ChannelCreated_Formatter : IonFormatter<ChannelCreated>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ChannelCreated Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __data = IonFormatterStorage<ArgonChannel>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __data);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ChannelCreated value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<ArgonChannel>.Write(writer, value.data);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ChannelModified_Formatter : IonFormatter<ChannelModified>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ChannelModified Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        var __bag = IonFormatterStorage<string>.ReadArray(reader);
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__spaceid, __channelid, __bag);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ChannelModified value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        IonFormatterStorage<string>.WriteArray(writer, value.bag);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ChannelRemoved_Formatter : IonFormatter<ChannelRemoved>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ChannelRemoved Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __channelid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ChannelRemoved value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_UserTypingEvent_Formatter : IonFormatter<UserTypingEvent>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public UserTypingEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__spaceid, __channelid, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, UserTypingEvent value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_UserStopTypingEvent_Formatter : IonFormatter<UserStopTypingEvent>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public UserStopTypingEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__spaceid, __channelid, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, UserStopTypingEvent value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_JoinedToChannelUser_Formatter : IonFormatter<JoinedToChannelUser>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public JoinedToChannelUser Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__spaceid, __channelid, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, JoinedToChannelUser value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_JoinToServerUser_Formatter : IonFormatter<JoinToServerUser>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public JoinToServerUser Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, JoinToServerUser value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_LeavedFromChannelUser_Formatter : IonFormatter<LeavedFromChannelUser>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public LeavedFromChannelUser Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__spaceid, __channelid, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, LeavedFromChannelUser value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_UserUpdated_Formatter : IonFormatter<UserUpdated>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public UserUpdated Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __dto = IonFormatterStorage<ArgonUser>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __dto);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, UserUpdated value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<ArgonUser>.Write(writer, value.dto);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_OnUserPresenceActivityChanged_Formatter : IonFormatter<OnUserPresenceActivityChanged>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public OnUserPresenceActivityChanged Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        var __presence = IonFormatterStorage<UserActivityPresence>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 3);
        return new(__spaceid, __userid, __presence);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, OnUserPresenceActivityChanged value)
    {
        writer.WriteStartArray(3);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        IonFormatterStorage<UserActivityPresence>.Write(writer, value.presence);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_OnUserPresenceActivityRemoved_Formatter : IonFormatter<OnUserPresenceActivityRemoved>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public OnUserPresenceActivityRemoved Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __userid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, OnUserPresenceActivityRemoved value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_UserChangedStatus_Formatter : IonFormatter<UserChangedStatus>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public UserChangedStatus Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __userid = IonFormatterStorage<guid>.Read(reader);
        var __status = IonFormatterStorage<UserStatus>.Read(reader);
        var __bag = IonFormatterStorage<string>.ReadArray(reader);
        reader.ReadEndArrayAndSkip(arraySize - 4);
        return new(__spaceid, __userid, __status, __bag);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, UserChangedStatus value)
    {
        writer.WriteStartArray(4);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        IonFormatterStorage<UserStatus>.Write(writer, value.status);
        IonFormatterStorage<string>.WriteArray(writer, value.bag);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_MessageSent_Formatter : IonFormatter<MessageSent>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public MessageSent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __message = IonFormatterStorage<ArgonMessage>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __message);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, MessageSent value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<ArgonMessage>.Write(writer, value.message);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ServerModified_Formatter : IonFormatter<ServerModified>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ServerModified Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __spaceid = IonFormatterStorage<guid>.Read(reader);
        var __bag = IonFormatterStorage<string>.ReadArray(reader);
        reader.ReadEndArrayAndSkip(arraySize - 2);
        return new(__spaceid, __bag);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ServerModified value)
    {
        writer.WriteStartArray(2);
        IonFormatterStorage<guid>.Write(writer, value.spaceId);
        IonFormatterStorage<string>.WriteArray(writer, value.bag);
        writer.WriteEndArray();
    }
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public interface IArgonClientEvent : IIonUnion<IArgonClientEvent>
{
    string UnionKey { get; }
    uint UnionIndex { get; }
    
    
    internal bool IsIAmTypingEvent => this is IAmTypingEvent;

    internal bool IsIAmStopTypingEvent => this is IAmStopTypingEvent;

    internal bool IsHeartBeatEvent => this is HeartBeatEvent;

    internal bool IsSubscribeToMySpaces => this is SubscribeToMySpaces;

}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record IAmTypingEvent(guid channelId) : IArgonClientEvent
{
    public string UnionKey => nameof(IAmTypingEvent);
    public uint UnionIndex => 0;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record IAmStopTypingEvent(guid channelId) : IArgonClientEvent
{
    public string UnionKey => nameof(IAmStopTypingEvent);
    public uint UnionIndex => 1;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record HeartBeatEvent(UserStatus status) : IArgonClientEvent
{
    public string UnionKey => nameof(HeartBeatEvent);
    public uint UnionIndex => 2;
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed record SubscribeToMySpaces() : IArgonClientEvent
{
    public string UnionKey => nameof(SubscribeToMySpaces);
    public uint UnionIndex => 3;
}



[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IArgonClientEvent_Formatter : IonFormatter<IArgonClientEvent>
{
    public IArgonClientEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");
        var unionIndex = reader.ReadUInt32();
        IArgonClientEvent result;
        if (false) {}
        
        else if (unionIndex == 0)
            result = IonFormatterStorage<IAmTypingEvent>.Read(reader);

        else if (unionIndex == 1)
            result = IonFormatterStorage<IAmStopTypingEvent>.Read(reader);

        else if (unionIndex == 2)
            result = IonFormatterStorage<HeartBeatEvent>.Read(reader);

        else if (unionIndex == 3)
            result = IonFormatterStorage<SubscribeToMySpaces>.Read(reader);

        else
            throw new InvalidOperationException();
        reader.ReadEndArray();
        return result;
    }

    public void Write(CborWriter writer, IArgonClientEvent value)
    {
        writer.WriteStartArray(2);
        writer.WriteUInt32(value.UnionIndex);

        if (false) {}
        
        else if (value is IAmTypingEvent n_0)
        {
            if (n_0.UnionIndex != 0)
                throw new InvalidOperationException();
            IonFormatterStorage<IAmTypingEvent>.Write(writer, n_0);
        }

        else if (value is IAmStopTypingEvent n_1)
        {
            if (n_1.UnionIndex != 1)
                throw new InvalidOperationException();
            IonFormatterStorage<IAmStopTypingEvent>.Write(writer, n_1);
        }

        else if (value is HeartBeatEvent n_2)
        {
            if (n_2.UnionIndex != 2)
                throw new InvalidOperationException();
            IonFormatterStorage<HeartBeatEvent>.Write(writer, n_2);
        }

        else if (value is SubscribeToMySpaces n_3)
        {
            if (n_3.UnionIndex != 3)
                throw new InvalidOperationException();
            IonFormatterStorage<SubscribeToMySpaces>.Write(writer, n_3);
        }
    
        else
            throw new InvalidOperationException();
        writer.WriteEndArray();    
    }
}


[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IAmTypingEvent_Formatter : IonFormatter<IAmTypingEvent>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public IAmTypingEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__channelid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, IAmTypingEvent value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_IAmStopTypingEvent_Formatter : IonFormatter<IAmStopTypingEvent>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public IAmStopTypingEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __channelid = IonFormatterStorage<guid>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__channelid);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, IAmStopTypingEvent value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<guid>.Write(writer, value.channelId);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_HeartBeatEvent_Formatter : IonFormatter<HeartBeatEvent>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public HeartBeatEvent Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __status = IonFormatterStorage<UserStatus>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 1);
        return new(__status);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, HeartBeatEvent value)
    {
        writer.WriteStartArray(1);
        IonFormatterStorage<UserStatus>.Write(writer, value.status);
        writer.WriteEndArray();
    }
}

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_SubscribeToMySpaces_Formatter : IonFormatter<SubscribeToMySpaces>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public SubscribeToMySpaces Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        
        reader.ReadEndArrayAndSkip(arraySize - 0);
        return new();
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, SubscribeToMySpaces value)
    {
        writer.WriteStartArray(0);
        
        writer.WriteEndArray();
    }
}


