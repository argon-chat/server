networks:
  argon_network:
    driver: bridge

services:
  yugabyte:
    image: yugabytedb/yugabyte:latest
    restart: on-failure
    container_name: argon-db
    command: ["bin/yugabyted", "start", "--daemon=false"] 
    volumes:
      - argon_db_data:/mnt
    networks:
      - argon_network

  keydb:
    image: eqalpha/keydb
    container_name: argon-cache
    restart: on-failure
    command: ["keydb-server"]
    networks:
      - argon_network

  vault:
    image: hashicorp/vault
    platform: linux/amd64
    restart: on-failure
    user: root
    container_name: argon-secrets
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK  
    environment:
      - SKIP_CHOWN=true
      - VAULT_LOCAL_CONFIG={"storage":{"file":{"path":"/vault/data"}},"listener":[{"tcp":{"address":"0.0.0.0:8200","tls_disable":true}}],"ui":true}
    command: server
    networks:
      - argon_network
    volumes:
      - vault_data:/vault
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://127.0.0.1:8200/v1/sys/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  vault_unseal:
    image: hashicorp/vault
    container_name: argon-secrets-unsealer
    platform: linux/amd64
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    restart: on-failure
    volumes:
      - vault_tokens:/vault
      - ./vault-tokens:/vault
      - ./entrypoint.sh:/entrypoint.sh:ro
    environment:
      - VAULT_ADDR=http://vault:8200
    networks:
      - argon_network
    healthcheck:
      test: ["CMD-SHELL", "[ -f /vault/token ] && exit 0 || exit 1"]
      interval: 5s
      retries: 5
      timeout: 3s
    depends_on:
      - vault

  argon-server:
    image: argonchat/argon-server
    container_name: argon-server
    restart: on-failure
    ports:
      - "5002:5002"
    environment:
      - USE_VAULT=true
      - ARGON_MODE=SingleInstance
      - ARGON_ROLE=Hybrid
      - ConnectionStrings__DefaultConnection=Host=yugabyte;Port=5433;Username=yugabyte;Database=apiDb
      - ARGON_VAULT_URL=http://vault:8200
      - VAULT_TOKEN_FILE=/vault/token
    volumes:
      - vault_tokens:/vault:ro
    depends_on:
      yugabyte:
        condition: service_started
      keydb:
        condition: service_started
      vault:
        condition: service_healthy
    networks:
      - argon_network
      

volumes:
  mysql_data: {}
  vault_data: {}
  vault_tokens: {}
  argon_db_data: {}
  vault_config: {}